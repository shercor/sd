syntax = "proto3";
package t2;
option go_package =  "./;t2";

message Solicitud {
    string IP = 1;   // IP de jugador  
    string PORT = 2;  // puerto jugador
}
  
message RespuestaSolicitud {
    int32 ID = 1; // ID
}

message Message {
    string body = 1;
}

message Jugada {
    int32 ID = 1;
    string numero = 2;
}

message ResultadoJugada {
    bool vivo = 1;
    bool NEXTETAPA = 2;
    bool WAIT = 3; // esperar a otros jugadores
}

// Interface exported by the server.
service LiderService {
    // Simple rpc
    rpc Unirse(Solicitud) returns (RespuestaSolicitud) {} // unirse al juego
    rpc SayHello(Message) returns (Message) {} // para debug
    
    // etapas
    //rpc ProcesarJugada(Jugada) returns (EstadoEtapa) {}
    rpc ProcesarJugada(Jugada) returns (Message) {}
    rpc GetResultadosRonda(RespuestaSolicitud) returns (ResultadoJugada) {}

    rpc EmpezarEtapa(Message) returns (Message) {} // para que esperen los jugadores a que empiece la suguiente etapa
}



